version: '3'

services:

  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: unless-stopped
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      AUTH_BASE_URL: "http://authentication-service"
      MAILER_BASE_URL: "http://mailer-service"
      LOGGER_DNS_NAME: "logger-service"
      AMQP_CONNECTION: amqp://guest:guest@rabbitmq

  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: unless-stopped
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgresdb port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
      LOGGER_BASE_URL: "http://logger-service"

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGODB_CONN: mongodb://mongodb:27017
      MONGODB_USER: admin
      MONGODB_PASSWORD: password

  mailer-service:
    build:
      context: ./../mailer-service
      dockerfile: ./../mailer-service/mailer-service.dockerfile
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com

  listener-service:
    build:
      context: ./../listener-service
      dockerfile: ./../listener-service/listener-service.dockerfile
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 1
    environment:
      AMQP_CONNECTION: amqp://guest:guest@rabbitmq
      LOGGER_BASE_URL: "http://logger-service"

  postgresdb:
    image: "postgres:14.2"
    ports:
      - "55432:5432"
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongodb:
    image: "mongo:4.2.16-bionic"
    ports:
      - "27019:27017"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data:/db

  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "1025:1025"
      - "8025:8025"
    deploy:
      mode: replicated
      replicas: 1

  rabbitmq:
    image: "rabbitmq:3.9-management-alpine"
    ports:
      - "5672:5672"
      - "15672:15672" # management console with username and password: guest / guest
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/