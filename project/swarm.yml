version: '3'

services:

  caddy:
    image: nicholasmantovani/micro-caddy:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  front-end:
    image: nicholasmantovani/front-end:1.0.2
    deploy:
      mode: replicated
      replicas: 1
    environment:
      BROKER_URL: "http://backend"

  broker-service:
    image: nicholasmantovani/broker-service:1.0.1
    deploy:
      mode: replicated
      replicas: 1
    environment:
      AUTH_BASE_URL: "http://authentication-service"
      MAILER_BASE_URL: "http://mailer-service"
      LOGGER_DNS_NAME: "logger-service"
      AMQP_CONNECTION: amqp://guest:guest@rabbitmq

  authentication-service:
    image: nicholasmantovani/authentication-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgresdb port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
      LOGGER_BASE_URL: "http://logger-service"

  logger-service:
    image: nicholasmantovani/logger-service:1.0.1
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGODB_CONN: mongodb://mongodb:27017
      MONGODB_USER: admin
      MONGODB_PASSWORD: password

  mailer-service:
    image: nicholasmantovani/mailer-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com

  listener-service:
    image: nicholasmantovani/listener-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      AMQP_CONNECTION: amqp://guest:guest@rabbitmq
      LOGGER_BASE_URL: "http://logger-service"

  rabbitmq:
    image: "rabbitmq:3.9-management-alpine"
    deploy:
      mode: global

  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "8025:8025"
    deploy:
      mode: global

  mongodb:
    image: "mongo:4.2.16-bionic"
    ports:
      - "27019:27017"
    deploy:
      mode: global
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  postgresdb:
    image: "postgres:14.2"
    ports:
      - "55432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/


volumes:
  caddy_data:
    external: true
  caddy_config: